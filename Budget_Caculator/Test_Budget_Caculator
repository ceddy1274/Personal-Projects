import unittest
from unittest.mock import patch
from Budget_Caculator import get_categories_and_values, get_month, sor

class TestGetDate(unittest.TestCase):
    @patch("builtins.input", side_effect=["Aug_2023", "N", "Sep_2023", "Y"])
    def test_get_month(self, mock_input):
        result = get_month()
        self.assertEqual(result, "Sep_2023")

class TestGreetUser(unittest.TestCase):
    @patch("builtins.input", side_effect=["Car-Payment", "50", "Car-Ga", "Undo: Car-Ga", "Car-Gas", "50", "Undo: Car-Gas", "40", KeyboardInterrupt])
    def test_get_categories_and_values(self, mock_input):
        result = get_categories_and_values()
        self.assertEqual(type(result), dict)
        self.assertEqual(result, {"Car-Payment": 50, "Car-Gas": 40})

def test_sor():
    assert sor({"Car-Payment": 50, "House-Payment": 50, "Car-Gas": 40}) == [{"Car-Gas": 40}, {"Car-Payment": 50}, {"House-Payment": 50}]

if __name__ == "__main__":
    unittest.main()